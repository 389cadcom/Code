{
  "presets": ["es2015", "stage-2"],	//"presets": ["env", options]
  "plugins": ["transform-runtime"],
  "comments": false									//除掉脚本中的注释
}

//不编译import export  -- bootstrap4
{
  "presets": [ "es2015", { "modules": false, "loose": true } ],
  "plugins": [ "transform-es2015-modules-strip" ]
}


/*
targets.node			支持到哪个版本的 node
targets.browsers	支持到哪个版本的浏览器
loose							启动宽松模式，配合 webpack 的 loader 使用
modules						模块加载机制  "amd" | "umd" | "systemjs" | "commonjs" | false， 默认为 "commonjs". false 就不会转换eS6模块
debug							开启调试模式
include						包含哪些文件
exclude						排除哪些文件
useBuiltIns			  是否对 babel-polyfill 进行分解，只引入所需的部分

//loose:
normal mode 转换更贴近es6的写法，property都是通过Object.defineProperty进行定义
loose mode  转换更贴近es5的写法，性能更好一些，兼容性更好一些，但将这部份代码再转换成native es6比较麻烦
*/

//插件配置参数
{
  "plugins": ['transfrom-runtime', options ]
}

/*
helpers: boolean				默认true，使用babel的helper函数；
polyfill: boolean				默认true，使用babel的polyfill，但是不能完全取代babel-polyfill；
regenerator: boolean		默认true，使用babel的regenerator；
moduleName: string			默认babel-runtime，使用对应module处理。

babel-runtime/helpers/classCallCheck
babel-runtime/helpers/createClass
*/



//解析，转换和生成
env, es2015, es2016, es2017, latest, react		// babel-preset-env代替
{
	"presets": [[
		"env": {
			"targets": {
				"browsers": ["> 1%", "last 2 versions", "ie >= 9"]
			},
			"useBintIns": true
		}	
	]],
	"plugins": ["transform-runtime"]
}